package View;

import Controller.IOFile;
import Model.BienToanCuc;
import Model.ChuDe;
import Model.TuVung;
import java.awt.Color;
import java.util.Collections;
import java.util.Iterator;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 * class : trắc nghiệm
 */
public class TracNghiemOnTap extends javax.swing.JFrame {

    /**
     * Creates new form TracNghiem
     */
    public TracNghiemOnTap() {
        initComponents();
        // khởi tạo comboBox ban đầu
        for( ChuDe cd : BienToanCuc.duLieu1.getDanhSachChuDe() ) {
            BoxTopic.addItem(cd.getTenChuDe());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DAA = new javax.swing.JButton();
        DAB = new javax.swing.JButton();
        DAC = new javax.swing.JButton();
        DAD = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        NextQuestion = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        PaneWord = new javax.swing.JTextPane();
        BoxTopic = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        BoxChange = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        POINT = new javax.swing.JLabel();
        MAX = new javax.swing.JLabel();
        KH = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(400, 100));

        DAA.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        DAA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DAAActionPerformed(evt);
            }
        });

        DAB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        DAB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DABActionPerformed(evt);
            }
        });

        DAC.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        DAC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DACActionPerformed(evt);
            }
        });

        DAD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        DAD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DADActionPerformed(evt);
            }
        });

        jButton5.setText("BACK");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        NextQuestion.setText("NEXT QUESTION");
        NextQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextQuestionActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(PaneWord);

        BoxTopic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoxTopicActionPerformed(evt);
            }
        });

        BoxChange.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Câu hỏi Tiếng Anh", "Câu hỏi Tiếng Việt" }));
        BoxChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoxChangeActionPerformed(evt);
            }
        });

        jLabel2.setText("Chọn chế độ");

        POINT.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        POINT.setForeground(new java.awt.Color(255, 0, 0));

        MAX.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        MAX.setForeground(new java.awt.Color(255, 0, 0));

        KH.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(DAD, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DAB, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                                .addGap(31, 31, 31)
                                .addComponent(BoxTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(89, 89, 89))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(DAA, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                                        .addComponent(DAC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(NextQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(83, 83, 83)
                                                .addComponent(BoxChange, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(95, 95, 95)
                                                .addComponent(POINT, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(KH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(86, 86, 86))
            .addGroup(layout.createSequentialGroup()
                .addGap(507, 507, 507)
                .addComponent(MAX, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(MAX, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(KH, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(POINT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(47, 47, 47))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(NextQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(BoxChange, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(BoxTopic))))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(DAA, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DAB, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DAD, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DAC, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * đóng cửa sổ, mở lại màn hình chính
     * @param evt 
     */
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        new MainProgram().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    TuVung wordQuestion = new TuVung();
    int []checkRandom = new int[10]; // 10 câu hỏi
    int i = 0; // index câu đầu tiên
    int point = 0; // điểm
    int max = 0; // tổng số câu
    /**
     * chuyển câu hỏi kế tiếp
     * @param evt 
     */
    private void NextQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextQuestionActionPerformed
        DAA.setForeground(null);
        DAB.setForeground(null);
        DAC.setForeground(null);
        DAD.setForeground(null);
        
        DAA.setBackground(null);
        DAB.setBackground(null);
        DAC.setBackground(null);
        DAD.setBackground(null);
        if( BoxChange.getSelectedIndex()== 0 ) {
            // tạo 1 cái tên topic tạm để lưu string Item từ combox đang được chọn
            String nameTemp = BoxTopic.getSelectedItem().toString();
            // tạo 1 chủ đề tạm set tên giống chủ đề trong danh sách thực
            ChuDe topicTemp = new ChuDe();
            for( ChuDe cd : BienToanCuc.duLieu1.getDanhSachChuDe() ) {
                if( cd.getTenChuDe().equals( nameTemp )) { topicTemp = cd; break; }
            }
            System.out.println(topicTemp.getSoLuongTu());
            Random rand = new Random();
            
            if( max == 10 ) {
                JOptionPane.showMessageDialog(this,"Mỗi loại trắc nghiệm 10 câu","Message Dialog Demo",JOptionPane.INFORMATION_MESSAGE);
                POINT.setText(String.valueOf(point));
                KH.setText("/");
                MAX.setText(String.valueOf(max));
                return;
            }
            
            int indexQuestion = rand.nextInt(topicTemp.getSoLuongTu()) + 0;
            while( (indexQuestion-checkRandom[0])*(indexQuestion-checkRandom[1])
                    *(indexQuestion-checkRandom[2])*(indexQuestion-checkRandom[3])
                    *(indexQuestion-checkRandom[4])*(indexQuestion-checkRandom[5])
                    *(indexQuestion-checkRandom[6])*(indexQuestion-checkRandom[7])
                    *(indexQuestion-checkRandom[8])*(indexQuestion-checkRandom[9])== 0 ) {
                indexQuestion = rand.nextInt(topicTemp.getSoLuongTu()) + 0;
            }
            checkRandom[i] = indexQuestion;
            i++;
                    
            int indexWrong1 = rand.nextInt(topicTemp.getSoLuongTu()) + 0;
            int indexWrong2 = rand.nextInt(topicTemp.getSoLuongTu()) + 0;
            int indexWrong3 = rand.nextInt(topicTemp.getSoLuongTu()) + 0;

            while ( (indexQuestion-indexWrong1)*(indexQuestion-indexWrong2)*
                    (indexQuestion-indexWrong3)*(indexWrong1-indexWrong2)*
                    (indexWrong1-indexWrong3)*(indexWrong2-indexWrong3) == 0 ) {
                indexWrong1 = rand.nextInt(topicTemp.getSoLuongTu()) + 0;
                indexWrong2 = rand.nextInt(topicTemp.getSoLuongTu()) + 0;
                indexWrong3 = rand.nextInt(topicTemp.getSoLuongTu()) + 0;
            }   

            System.out.println(indexQuestion+"  "+indexWrong1+" "+indexWrong2+" "+indexWrong3);       

            wordQuestion = topicTemp.getDanhSachTu().get(indexQuestion);
            TuVung wordWrong1 = topicTemp.getDanhSachTu().get(indexWrong1);
            TuVung wordWrong2 = topicTemp.getDanhSachTu().get(indexWrong2);
            TuVung wordWrong3 = topicTemp.getDanhSachTu().get(indexWrong3);
            PaneWord.setText( wordQuestion.getTenTu() );

            String []answer = { "DAA", "DAB" , "DAC" , "DAD" };

            int indexTrue = rand.nextInt(3) + 0;
            if( indexTrue == 0 ) {
                DAA.setText(wordQuestion.getNghia());
                DAB.setText(wordWrong1.getNghia());
                DAC.setText(wordWrong2.getNghia());
                DAD.setText(wordWrong3.getNghia());
            }

            if( indexTrue == 1 ) {
                DAA.setText(wordWrong1.getNghia());
                DAB.setText(wordQuestion.getNghia());
                DAC.setText(wordWrong2.getNghia());
                DAD.setText(wordWrong3.getNghia());
            }

            if( indexTrue == 2 ) {
                DAA.setText(wordWrong1.getNghia());
                DAB.setText(wordWrong2.getNghia());
                DAC.setText(wordQuestion.getNghia());
                DAD.setText(wordWrong3.getNghia());
            }

            if( indexTrue == 3 ) {
                DAA.setText(wordWrong1.getNghia());
                DAB.setText(wordWrong2.getNghia());
                DAC.setText(wordWrong3.getNghia());
                DAD.setText(wordQuestion.getNghia());
            }            
        }
        else {
            // tạo 1 cái tên topic tạm để lưu string Item từ combox đang được chọn
            String nameTemp = BoxTopic.getSelectedItem().toString();
            // tạo 1 chủ đề tạm set tên giống chủ đề trong danh sách thực
            ChuDe topicTemp = new ChuDe();
            for( ChuDe cd : BienToanCuc.duLieu1.getDanhSachChuDe() ) {
                if( cd.getTenChuDe().equals( nameTemp )) { topicTemp = cd; break; }
            }
            System.out.println(topicTemp.getSoLuongTu());
            Random rand = new Random();
            int indexQuestion = rand.nextInt(topicTemp.getSoLuongTu()) + 0;
            int indexWrong1 = rand.nextInt(topicTemp.getSoLuongTu()) + 0;
            int indexWrong2 = rand.nextInt(topicTemp.getSoLuongTu()) + 0;
            int indexWrong3 = rand.nextInt(topicTemp.getSoLuongTu()) + 0;

            while ( (indexQuestion-indexWrong1)*(indexQuestion-indexWrong2)*
                    (indexQuestion-indexWrong3)*(indexWrong1-indexWrong2)*
                    (indexWrong1-indexWrong3)*(indexWrong2-indexWrong3) == 0 ) {
                indexWrong1 = rand.nextInt(topicTemp.getSoLuongTu()) + 0;
                indexWrong2 = rand.nextInt(topicTemp.getSoLuongTu()) + 0;
                indexWrong3 = rand.nextInt(topicTemp.getSoLuongTu()) + 0;
            }   

            System.out.println(indexQuestion+"  "+indexWrong1+" "+indexWrong2+" "+indexWrong3);       

            wordQuestion = topicTemp.getDanhSachTu().get(indexQuestion);
            TuVung wordWrong1 = topicTemp.getDanhSachTu().get(indexWrong1);
            TuVung wordWrong2 = topicTemp.getDanhSachTu().get(indexWrong2);
            TuVung wordWrong3 = topicTemp.getDanhSachTu().get(indexWrong3);
            PaneWord.setText( wordQuestion.getNghia());

            String []answer = { "DAA", "DAB" , "DAC" , "DAD" };

            int indexTrue = rand.nextInt(3) + 0;
            if( indexTrue == 0 ) {
                DAA.setText(wordQuestion.getTenTu());
                DAB.setText(wordWrong1.getTenTu());
                DAC.setText(wordWrong2.getTenTu());
                DAD.setText(wordWrong3.getTenTu());
            }

            if( indexTrue == 1 ) {
                DAA.setText(wordWrong1.getTenTu());
                DAB.setText(wordQuestion.getTenTu());
                DAC.setText(wordWrong2.getTenTu());
                DAD.setText(wordWrong3.getTenTu());
            }

            if( indexTrue == 2 ) {
                DAA.setText(wordWrong1.getTenTu());
                DAB.setText(wordWrong2.getTenTu());
                DAC.setText(wordQuestion.getTenTu());
                DAD.setText(wordWrong3.getTenTu());
            }

            if( indexTrue == 3 ) {
                DAA.setText(wordWrong1.getTenTu());
                DAB.setText(wordWrong2.getTenTu());
                DAC.setText(wordWrong3.getTenTu());
                DAD.setText(wordQuestion.getTenTu());
            }            
        }
    }//GEN-LAST:event_NextQuestionActionPerformed
    /**
     * hiển thị thông tin cho đáp án
     * @param evt 
     */
    private void DAAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DAAActionPerformed
        if( DAA.getText().equals( wordQuestion.getNghia()) || DAA.getText().equals( wordQuestion.getTenTu())) {
            DAA.setBackground(Color.green); DAA.setBorderPainted(false); point++ ; max++;
            DAA.setForeground(Color.red);
        }
        else { JOptionPane.showMessageDialog(this,"Wrong answer","Message Dialog Demo",JOptionPane.ERROR_MESSAGE); max++; }
    }//GEN-LAST:event_DAAActionPerformed
    /**
     * hiển thị thông tin cho đáp án
     * @param evt 
     */
    private void DABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DABActionPerformed
       if( DAB.getText().equals( wordQuestion.getNghia()) || DAB.getText().equals( wordQuestion.getTenTu())) {
            DAB.setBackground(Color.green); DAB.setBorderPainted(false); point++ ; max++;
            DAB.setForeground(Color.red);
        }
        else { JOptionPane.showMessageDialog(this,"Wrong answer","Message Dialog Demo",JOptionPane.ERROR_MESSAGE); max++; }
    }//GEN-LAST:event_DABActionPerformed
    /**
     * hiển thị thông tin cho đáp án
     * @param evt 
     */
    private void DACActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DACActionPerformed
       if( DAC.getText().equals( wordQuestion.getNghia()) || DAC.getText().equals( wordQuestion.getTenTu())) {
            DAC.setBackground(Color.green); DAC.setBorderPainted(false); point++ ; max++;
            DAC.setForeground(Color.red);
        }
        else { JOptionPane.showMessageDialog(this,"Wrong answer","Message Dialog Demo",JOptionPane.ERROR_MESSAGE); max++; }
    }//GEN-LAST:event_DACActionPerformed
    /**
     * hiển thị thông tin cho đáp án
     * @param evt 
     */
    private void DADActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DADActionPerformed
       if( DAD.getText().equals( wordQuestion.getNghia()) || DAD.getText().equals( wordQuestion.getTenTu())) {
            DAD.setBackground(Color.green); DAD.setBorderPainted(false); point++ ; max++;
            DAD.setForeground(Color.red);
        }
        else { JOptionPane.showMessageDialog(this,"Wrong answer","Message Dialog Demo",JOptionPane.ERROR_MESSAGE); max++; }
    }//GEN-LAST:event_DADActionPerformed
    /**
     * đổi chủ đề , đưa mọi thứ về trắng ( null )
     * @param evt 
     */
    private void BoxTopicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoxTopicActionPerformed
        DAA.setText(null);
        DAB.setText(null);
        DAC.setText(null);
        DAD.setText(null);
        PaneWord.setText(null);    
        for(int index = 0 ; i<10 ; i++ ) checkRandom[index]=-1;
        i=0;
    }//GEN-LAST:event_BoxTopicActionPerformed
    /**
     * đổi kiểu câu hỏi, đưa mọi thứ về trắng ( null )
     * @param evt 
     */
    private void BoxChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoxChangeActionPerformed
        DAA.setText(null);
        DAB.setText(null);
        DAC.setText(null);
        DAD.setText(null);
        PaneWord.setText(null);
        for(int index = 0 ; i<10 ; i++ ) checkRandom[index]=-1;
        i=0;
    }//GEN-LAST:event_BoxChangeActionPerformed

    /**
     * hàm main chính
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TracNghiemOnTap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TracNghiemOnTap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TracNghiemOnTap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TracNghiemOnTap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TracNghiemOnTap().setVisible(true);
            }
        });
        
        IOFile.inputChuDe(BienToanCuc.duLieu1);
        IOFile.inputTuVung(BienToanCuc.duLieu1);
        
        for( ChuDe cd : BienToanCuc.duLieu1.getDanhSachChuDe() ) {
            Collections.sort(cd.getDanhSachTu(),new WordComparator());  
            Iterator wtf =cd.getDanhSachTu().iterator(); 
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> BoxChange;
    private javax.swing.JComboBox<String> BoxTopic;
    private javax.swing.JButton DAA;
    private javax.swing.JButton DAB;
    private javax.swing.JButton DAC;
    private javax.swing.JButton DAD;
    private javax.swing.JLabel KH;
    private javax.swing.JLabel MAX;
    private javax.swing.JButton NextQuestion;
    private javax.swing.JLabel POINT;
    private javax.swing.JTextPane PaneWord;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
